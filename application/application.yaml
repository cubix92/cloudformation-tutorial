AWSTemplateFormatVersion: 2010-09-09
Description: Application template

Parameters:
  ImageId:
    Description: Id of the AMI with Application
    Type: AWS::EC2::Image::Id
  InstanceType:
    Description: Type of instance
    Type: String
    Default: t2.micro
  LaunchTemplateVersion:
    Description: Launch template version
    Type: String
    Default: ''

Conditions:
  UseProvidedTemplateVersion: !Not [ !Equals [!Ref LaunchTemplateVersion, ''] ]

Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ApplicationLaunchTemplate
        Version: !If
          - UseProvidedTemplateVersion
          - !Ref LaunchTemplateVersion
          - !GetAtt ApplicationLaunchTemplate.LatestVersionNumber
      SubnetId: !ImportValue subnet-public-1-id
  ApplicationLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        SecurityGroupIds:
          - !ImportValue main-security-group-id
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub ${AWS::StackName}-ALT
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo yum install -y httpd24 php70 mod_ssl
            service httpd start
            chkconfig httpd on
            
            cat <<EOF> /var/www/html/index.html
            <html>
              <body>
                <h1> This is simple webpage hosted on EC2 instance</h1>
                <p> This is working!</p>
                <small>$RANDOM</small>
              </body>
            </html>
            EOF
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
  ApplicationAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ApplicationLaunchTemplate
        Version: !If
          - UseProvidedTemplateVersion
          - !Ref LaunchTemplateVersion
          - !GetAtt ApplicationLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 2
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      VPCZoneIdentifier:
        - !ImportValue subnet-private-1-id
        - !ImportValue subnet-private-2-id
      TargetGroupARNs:
        - !ImportValue application-target-group-id
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-ASG
          PropagateAtLaunch: false
  ScaleOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ApplicationAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: 1
  ScaleInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ApplicationAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: -1
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 70
      AlarmDescription: High CPU Alarm to trigger the scale out policy
      Period: 300
      AlarmActions:
        - Ref: ScaleOutPolicy
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value:
            Ref: ApplicationAutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 3
      Statistic: Average
      Threshold: 30
      AlarmDescription: Low CPU Alarm to trigger the scale in policy
      Period: 300
      AlarmActions:
        - Ref: ScaleInPolicy
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value:
            Ref: ApplicationAutoScalingGroup
      ComparisonOperator: LessThanThreshold
      MetricName: CPUUtilization

Outputs:
  InstanceId:
    Description: The ID of the Instance
    Value: !Ref Instance
  InstanceIpAddress:
    Description: The instance IP address
    Value: !GetAtt Instance.PublicIp
  InstanceRole:
    Description: The instance role name
    Value: !Ref InstanceRole
